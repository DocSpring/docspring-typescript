/**
 * DocSpring API
 * DocSpring provides an API that helps you fill out and sign PDF templates.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class SubmissionDataRequest {
    'id': string | null;
    'email': string | null;
    'name': string | null;
    'order': number | null;
    'sortOrder': number;
    'fields': Array<string> | null;
    'metadata': any | null;
    'state': SubmissionDataRequestStateEnum;
    'viewedAt': string | null;
    'completedAt': string | null;
    'data': any | null;
    'authType': SubmissionDataRequestAuthTypeEnum;
    'authSecondFactorType': SubmissionDataRequestAuthSecondFactorTypeEnum;
    'authProvider': string | null;
    'authSessionStartedAt': string | null;
    'authSessionIdHash': string | null;
    'authUserIdHash': string | null;
    'authUsernameHash': string | null;
    'authPhoneNumberHash': string | null;
    'ipAddress': string | null;
    'userAgent': string | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "order",
            "baseName": "order",
            "type": "number",
            "format": ""
        },
        {
            "name": "sortOrder",
            "baseName": "sort_order",
            "type": "number",
            "format": ""
        },
        {
            "name": "fields",
            "baseName": "fields",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "any",
            "format": ""
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "SubmissionDataRequestStateEnum",
            "format": ""
        },
        {
            "name": "viewedAt",
            "baseName": "viewed_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "completedAt",
            "baseName": "completed_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "data",
            "baseName": "data",
            "type": "any",
            "format": ""
        },
        {
            "name": "authType",
            "baseName": "auth_type",
            "type": "SubmissionDataRequestAuthTypeEnum",
            "format": ""
        },
        {
            "name": "authSecondFactorType",
            "baseName": "auth_second_factor_type",
            "type": "SubmissionDataRequestAuthSecondFactorTypeEnum",
            "format": ""
        },
        {
            "name": "authProvider",
            "baseName": "auth_provider",
            "type": "string",
            "format": ""
        },
        {
            "name": "authSessionStartedAt",
            "baseName": "auth_session_started_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "authSessionIdHash",
            "baseName": "auth_session_id_hash",
            "type": "string",
            "format": ""
        },
        {
            "name": "authUserIdHash",
            "baseName": "auth_user_id_hash",
            "type": "string",
            "format": ""
        },
        {
            "name": "authUsernameHash",
            "baseName": "auth_username_hash",
            "type": "string",
            "format": ""
        },
        {
            "name": "authPhoneNumberHash",
            "baseName": "auth_phone_number_hash",
            "type": "string",
            "format": ""
        },
        {
            "name": "ipAddress",
            "baseName": "ip_address",
            "type": "string",
            "format": ""
        },
        {
            "name": "userAgent",
            "baseName": "user_agent",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SubmissionDataRequest.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum SubmissionDataRequestStateEnum {
    Pending = 'pending',
    Completed = 'completed'
}
export enum SubmissionDataRequestAuthTypeEnum {
    None = 'none',
    Password = 'password',
    Oauth = 'oauth',
    EmailLink = 'email_link',
    PhoneNumber = 'phone_number',
    Ldap = 'ldap',
    Saml = 'saml'
}
export enum SubmissionDataRequestAuthSecondFactorTypeEnum {
    None = 'none',
    PhoneNumber = 'phone_number',
    Totp = 'totp',
    MobilePush = 'mobile_push',
    SecurityKey = 'security_key',
    Fingerprint = 'fingerprint'
}

