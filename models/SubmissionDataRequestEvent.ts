/**
 * DocSpring API
 * Use DocSpring\'s API to programmatically fill out PDF forms, convert HTML to PDFs, merge PDFs, or request legally binding e-signatures.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class SubmissionDataRequestEvent {
    'id': string | null;
    'submission_id': string | null;
    'submission_data_request_id': string | null;
    'event_type': SubmissionDataRequestEventEventTypeEnum;
    'message_type': SubmissionDataRequestEventMessageTypeEnum | null;
    'message_recipient': string | null;
    'occurred_at': string | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "submission_id",
            "baseName": "submission_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "submission_data_request_id",
            "baseName": "submission_data_request_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "event_type",
            "baseName": "event_type",
            "type": "SubmissionDataRequestEventEventTypeEnum",
            "format": ""
        },
        {
            "name": "message_type",
            "baseName": "message_type",
            "type": "SubmissionDataRequestEventMessageTypeEnum",
            "format": ""
        },
        {
            "name": "message_recipient",
            "baseName": "message_recipient",
            "type": "string",
            "format": ""
        },
        {
            "name": "occurred_at",
            "baseName": "occurred_at",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SubmissionDataRequestEvent.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum SubmissionDataRequestEventEventTypeEnum {
    SendRequest = 'send_request',
    ViewRequest = 'view_request',
    AcceptedTerms = 'accepted_terms',
    DeclineRequest = 'decline_request',
    SignRequest = 'sign_request',
    AllCompleted = 'all_completed'
}
export enum SubmissionDataRequestEventMessageTypeEnum {
    Email = 'email',
    Sms = 'sms',
    Fax = 'fax',
    Mail = 'mail',
    Slack = 'slack',
    Msteams = 'msteams',
    Discord = 'discord',
    Telegram = 'telegram',
    Whatsapp = 'whatsapp'
}

