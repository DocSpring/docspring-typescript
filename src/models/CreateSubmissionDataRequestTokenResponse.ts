/* tslint:disable */
/* eslint-disable */
/**
 * API v1
 * DocSpring is a service that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DataRequestToken } from './DataRequestToken';
import {
    DataRequestTokenFromJSON,
    DataRequestTokenFromJSONTyped,
    DataRequestTokenToJSON,
} from './DataRequestToken';

/**
 * 
 * @export
 * @interface CreateSubmissionDataRequestTokenResponse
 */
export interface CreateSubmissionDataRequestTokenResponse {
    /**
     * 
     * @type {string}
     * @memberof CreateSubmissionDataRequestTokenResponse
     */
    status: CreateSubmissionDataRequestTokenResponseStatusEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateSubmissionDataRequestTokenResponse
     */
    errors?: Array<string>;
    /**
     * 
     * @type {DataRequestToken}
     * @memberof CreateSubmissionDataRequestTokenResponse
     */
    token: DataRequestToken;
}


/**
 * @export
 */
export const CreateSubmissionDataRequestTokenResponseStatusEnum = {
    Success: 'success',
    Error: 'error'
} as const;
export type CreateSubmissionDataRequestTokenResponseStatusEnum = typeof CreateSubmissionDataRequestTokenResponseStatusEnum[keyof typeof CreateSubmissionDataRequestTokenResponseStatusEnum];


/**
 * Check if a given object implements the CreateSubmissionDataRequestTokenResponse interface.
 */
export function instanceOfCreateSubmissionDataRequestTokenResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "token" in value;

    return isInstance;
}

export function CreateSubmissionDataRequestTokenResponseFromJSON(json: any): CreateSubmissionDataRequestTokenResponse {
    return CreateSubmissionDataRequestTokenResponseFromJSONTyped(json, false);
}

export function CreateSubmissionDataRequestTokenResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateSubmissionDataRequestTokenResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': json['status'],
        'errors': !exists(json, 'errors') ? undefined : json['errors'],
        'token': DataRequestTokenFromJSON(json['token']),
    };
}

export function CreateSubmissionDataRequestTokenResponseToJSON(value?: CreateSubmissionDataRequestTokenResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'errors': value.errors,
        'token': DataRequestTokenToJSON(value.token),
    };
}

