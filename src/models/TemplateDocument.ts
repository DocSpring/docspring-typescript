/* tslint:disable */
/* eslint-disable */
/**
 * API v1
 * DocSpring is a service that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TemplateDocumentMetadata } from './TemplateDocumentMetadata';
import {
    TemplateDocumentMetadataFromJSON,
    TemplateDocumentMetadataFromJSONTyped,
    TemplateDocumentMetadataToJSON,
} from './TemplateDocumentMetadata';

/**
 * 
 * @export
 * @interface TemplateDocument
 */
export interface TemplateDocument {
    /**
     * 
     * @type {string}
     * @memberof TemplateDocument
     */
    id: string;
    /**
     * 
     * @type {TemplateDocumentMetadata}
     * @memberof TemplateDocument
     */
    metadata: TemplateDocumentMetadata;
    /**
     * 
     * @type {string}
     * @memberof TemplateDocument
     */
    storage: TemplateDocumentStorageEnum;
}


/**
 * @export
 */
export const TemplateDocumentStorageEnum = {
    Cache: 'cache'
} as const;
export type TemplateDocumentStorageEnum = typeof TemplateDocumentStorageEnum[keyof typeof TemplateDocumentStorageEnum];


/**
 * Check if a given object implements the TemplateDocument interface.
 */
export function instanceOfTemplateDocument(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "metadata" in value;
    isInstance = isInstance && "storage" in value;

    return isInstance;
}

export function TemplateDocumentFromJSON(json: any): TemplateDocument {
    return TemplateDocumentFromJSONTyped(json, false);
}

export function TemplateDocumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplateDocument {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'metadata': TemplateDocumentMetadataFromJSON(json['metadata']),
        'storage': json['storage'],
    };
}

export function TemplateDocumentToJSON(value?: TemplateDocument | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'metadata': TemplateDocumentMetadataToJSON(value.metadata),
        'storage': value.storage,
    };
}

