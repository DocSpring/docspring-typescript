/* tslint:disable */
/* eslint-disable */
/**
 * API v1
 * DocSpring is a service that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TemplateDefaults } from './TemplateDefaults';
import {
    TemplateDefaultsFromJSON,
    TemplateDefaultsFromJSONTyped,
    TemplateDefaultsToJSON,
} from './TemplateDefaults';

/**
 * 
 * @export
 * @interface FullTemplate
 */
export interface FullTemplate {
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    name: string | null;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    description: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof FullTemplate
     */
    publicWebForm: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullTemplate
     */
    publicSubmissions: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullTemplate
     */
    expireSubmissions: boolean;
    /**
     * 
     * @type {number}
     * @memberof FullTemplate
     */
    expireAfter: number;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    expirationInterval: FullTemplateExpirationIntervalEnum;
    /**
     * 
     * @type {boolean}
     * @memberof FullTemplate
     */
    allowAdditionalProperties: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullTemplate
     */
    editableSubmissions: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullTemplate
     */
    locked: boolean;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    webhookUrl: string | null;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    slackWebhookUrl: string | null;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    redirectUrl: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof FullTemplate
     */
    firstTemplate: boolean;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    html: string | null;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    headerHtml: string | null;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    footerHtml: string | null;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    scss: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof FullTemplate
     */
    encryptPdfs: boolean;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    encryptPdfsPassword: string | null;
    /**
     * 
     * @type {TemplateDefaults}
     * @memberof FullTemplate
     */
    defaults: TemplateDefaults;
    /**
     * 
     * @type {object}
     * @memberof FullTemplate
     */
    fields: object;
    /**
     * 
     * @type {object}
     * @memberof FullTemplate
     */
    sharedFieldData: object;
    /**
     * 
     * @type {Array<Array<number>>}
     * @memberof FullTemplate
     */
    fieldOrder: Array<Array<number>>;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    documentMd5: string | null;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    documentFilename: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof FullTemplate
     */
    documentParseError: boolean;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    documentState: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof FullTemplate
     */
    embedDomains: Array<string> | null;
    /**
     * 
     * @type {number}
     * @memberof FullTemplate
     */
    pageCount: number;
    /**
     * 
     * @type {boolean}
     * @memberof FullTemplate
     */
    documentProcessed: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullTemplate
     */
    demo: boolean;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    templateType: string;
    /**
     * 
     * @type {Array<Array<number>>}
     * @memberof FullTemplate
     */
    pageDimensions: Array<Array<number>> | null;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    documentUrl: string | null;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    permanentDocumentUrl: string | null;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    path: string;
    /**
     * 
     * @type {string}
     * @memberof FullTemplate
     */
    parentFolderId: string | null;
}


/**
 * @export
 */
export const FullTemplateExpirationIntervalEnum = {
    Minutes: 'minutes',
    Hours: 'hours',
    Days: 'days'
} as const;
export type FullTemplateExpirationIntervalEnum = typeof FullTemplateExpirationIntervalEnum[keyof typeof FullTemplateExpirationIntervalEnum];


/**
 * Check if a given object implements the FullTemplate interface.
 */
export function instanceOfFullTemplate(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "publicWebForm" in value;
    isInstance = isInstance && "publicSubmissions" in value;
    isInstance = isInstance && "expireSubmissions" in value;
    isInstance = isInstance && "expireAfter" in value;
    isInstance = isInstance && "expirationInterval" in value;
    isInstance = isInstance && "allowAdditionalProperties" in value;
    isInstance = isInstance && "editableSubmissions" in value;
    isInstance = isInstance && "locked" in value;
    isInstance = isInstance && "webhookUrl" in value;
    isInstance = isInstance && "slackWebhookUrl" in value;
    isInstance = isInstance && "redirectUrl" in value;
    isInstance = isInstance && "firstTemplate" in value;
    isInstance = isInstance && "html" in value;
    isInstance = isInstance && "headerHtml" in value;
    isInstance = isInstance && "footerHtml" in value;
    isInstance = isInstance && "scss" in value;
    isInstance = isInstance && "encryptPdfs" in value;
    isInstance = isInstance && "encryptPdfsPassword" in value;
    isInstance = isInstance && "defaults" in value;
    isInstance = isInstance && "fields" in value;
    isInstance = isInstance && "sharedFieldData" in value;
    isInstance = isInstance && "fieldOrder" in value;
    isInstance = isInstance && "documentMd5" in value;
    isInstance = isInstance && "documentFilename" in value;
    isInstance = isInstance && "documentParseError" in value;
    isInstance = isInstance && "documentState" in value;
    isInstance = isInstance && "embedDomains" in value;
    isInstance = isInstance && "pageCount" in value;
    isInstance = isInstance && "documentProcessed" in value;
    isInstance = isInstance && "demo" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "templateType" in value;
    isInstance = isInstance && "pageDimensions" in value;
    isInstance = isInstance && "documentUrl" in value;
    isInstance = isInstance && "permanentDocumentUrl" in value;
    isInstance = isInstance && "path" in value;
    isInstance = isInstance && "parentFolderId" in value;

    return isInstance;
}

export function FullTemplateFromJSON(json: any): FullTemplate {
    return FullTemplateFromJSONTyped(json, false);
}

export function FullTemplateFromJSONTyped(json: any, ignoreDiscriminator: boolean): FullTemplate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'],
        'publicWebForm': json['public_web_form'],
        'publicSubmissions': json['public_submissions'],
        'expireSubmissions': json['expire_submissions'],
        'expireAfter': json['expire_after'],
        'expirationInterval': json['expiration_interval'],
        'allowAdditionalProperties': json['allow_additional_properties'],
        'editableSubmissions': json['editable_submissions'],
        'locked': json['locked'],
        'webhookUrl': json['webhook_url'],
        'slackWebhookUrl': json['slack_webhook_url'],
        'redirectUrl': json['redirect_url'],
        'firstTemplate': json['first_template'],
        'html': json['html'],
        'headerHtml': json['header_html'],
        'footerHtml': json['footer_html'],
        'scss': json['scss'],
        'encryptPdfs': json['encrypt_pdfs'],
        'encryptPdfsPassword': json['encrypt_pdfs_password'],
        'defaults': TemplateDefaultsFromJSON(json['defaults']),
        'fields': json['fields'],
        'sharedFieldData': json['shared_field_data'],
        'fieldOrder': json['field_order'],
        'documentMd5': json['document_md5'],
        'documentFilename': json['document_filename'],
        'documentParseError': json['document_parse_error'],
        'documentState': json['document_state'],
        'embedDomains': json['embed_domains'],
        'pageCount': json['page_count'],
        'documentProcessed': json['document_processed'],
        'demo': json['demo'],
        'id': json['id'],
        'templateType': json['template_type'],
        'pageDimensions': json['page_dimensions'],
        'documentUrl': json['document_url'],
        'permanentDocumentUrl': json['permanent_document_url'],
        'path': json['path'],
        'parentFolderId': json['parent_folder_id'],
    };
}

export function FullTemplateToJSON(value?: FullTemplate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'public_web_form': value.publicWebForm,
        'public_submissions': value.publicSubmissions,
        'expire_submissions': value.expireSubmissions,
        'expire_after': value.expireAfter,
        'expiration_interval': value.expirationInterval,
        'allow_additional_properties': value.allowAdditionalProperties,
        'editable_submissions': value.editableSubmissions,
        'locked': value.locked,
        'webhook_url': value.webhookUrl,
        'slack_webhook_url': value.slackWebhookUrl,
        'redirect_url': value.redirectUrl,
        'first_template': value.firstTemplate,
        'html': value.html,
        'header_html': value.headerHtml,
        'footer_html': value.footerHtml,
        'scss': value.scss,
        'encrypt_pdfs': value.encryptPdfs,
        'encrypt_pdfs_password': value.encryptPdfsPassword,
        'defaults': TemplateDefaultsToJSON(value.defaults),
        'fields': value.fields,
        'shared_field_data': value.sharedFieldData,
        'field_order': value.fieldOrder,
        'document_md5': value.documentMd5,
        'document_filename': value.documentFilename,
        'document_parse_error': value.documentParseError,
        'document_state': value.documentState,
        'embed_domains': value.embedDomains,
        'page_count': value.pageCount,
        'document_processed': value.documentProcessed,
        'demo': value.demo,
        'id': value.id,
        'template_type': value.templateType,
        'page_dimensions': value.pageDimensions,
        'document_url': value.documentUrl,
        'permanent_document_url': value.permanentDocumentUrl,
        'path': value.path,
        'parent_folder_id': value.parentFolderId,
    };
}

