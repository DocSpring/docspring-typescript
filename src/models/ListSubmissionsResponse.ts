/* tslint:disable */
/* eslint-disable */
/**
 * API v1
 * DocSpring is a service that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Submission } from './Submission';
import {
    SubmissionFromJSON,
    SubmissionFromJSONTyped,
    SubmissionToJSON,
} from './Submission';

/**
 * 
 * @export
 * @interface ListSubmissionsResponse
 */
export interface ListSubmissionsResponse {
    /**
     * 
     * @type {Array<Submission>}
     * @memberof ListSubmissionsResponse
     */
    submissions: Array<Submission>;
    /**
     * 
     * @type {number}
     * @memberof ListSubmissionsResponse
     */
    limit: number;
    /**
     * 
     * @type {string}
     * @memberof ListSubmissionsResponse
     */
    nextCursor: string | null;
}

/**
 * Check if a given object implements the ListSubmissionsResponse interface.
 */
export function instanceOfListSubmissionsResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "submissions" in value;
    isInstance = isInstance && "limit" in value;
    isInstance = isInstance && "nextCursor" in value;

    return isInstance;
}

export function ListSubmissionsResponseFromJSON(json: any): ListSubmissionsResponse {
    return ListSubmissionsResponseFromJSONTyped(json, false);
}

export function ListSubmissionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListSubmissionsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'submissions': ((json['submissions'] as Array<any>).map(SubmissionFromJSON)),
        'limit': json['limit'],
        'nextCursor': json['next_cursor'],
    };
}

export function ListSubmissionsResponseToJSON(value?: ListSubmissionsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'submissions': ((value.submissions as Array<any>).map(SubmissionToJSON)),
        'limit': value.limit,
        'next_cursor': value.nextCursor,
    };
}

