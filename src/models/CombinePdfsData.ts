/* tslint:disable */
/* eslint-disable */
/**
 * API v1
 * DocSpring is a service that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CombinePdfsData
 */
export interface CombinePdfsData {
    /**
     * 
     * @type {boolean}
     * @memberof CombinePdfsData
     */
    deleteCustomFiles?: boolean;
    /**
     * 
     * @type {number}
     * @memberof CombinePdfsData
     */
    expiresIn?: number;
    /**
     * 
     * @type {object}
     * @memberof CombinePdfsData
     */
    metadata?: object;
    /**
     * 
     * @type {string}
     * @memberof CombinePdfsData
     */
    password?: string;
    /**
     * 
     * @type {Array<object>}
     * @memberof CombinePdfsData
     */
    sourcePdfs: Array<object>;
    /**
     * 
     * @type {boolean}
     * @memberof CombinePdfsData
     */
    test?: boolean;
}

/**
 * Check if a given object implements the CombinePdfsData interface.
 */
export function instanceOfCombinePdfsData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sourcePdfs" in value;

    return isInstance;
}

export function CombinePdfsDataFromJSON(json: any): CombinePdfsData {
    return CombinePdfsDataFromJSONTyped(json, false);
}

export function CombinePdfsDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): CombinePdfsData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'deleteCustomFiles': !exists(json, 'delete_custom_files') ? undefined : json['delete_custom_files'],
        'expiresIn': !exists(json, 'expires_in') ? undefined : json['expires_in'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'sourcePdfs': json['source_pdfs'],
        'test': !exists(json, 'test') ? undefined : json['test'],
    };
}

export function CombinePdfsDataToJSON(value?: CombinePdfsData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'delete_custom_files': value.deleteCustomFiles,
        'expires_in': value.expiresIn,
        'metadata': value.metadata,
        'password': value.password,
        'source_pdfs': value.sourcePdfs,
        'test': value.test,
    };
}

